# Build using Visual Studio 2017 on Windows Server 2016.

trigger: none

pool:
  vmImage: "windows-latest"

variables:
  build_cake: "./src/build.cake"
  artifacts_location: "$(Pipeline.Workspace)/s/output"

steps:

  - task: gitversion/setup@0
    inputs:
      versionSpec: '5.8.1'

  - task: GitVersion@5
    inputs:
      runtime: 'full'
      configFilePath: '$(Build.Repository.LocalPath)/GitVersion.yml'

  - task: UseNode@1
    displayName: Installing Node 10
    inputs:
      version: '16.x'

  - task: DownloadSecureFile@1
    displayName: Download license
    name: license_file
    inputs:
      secureFile: "license.xml"

  - task: DownloadPipelineArtifact@2
    displayName: Download tools
    inputs:
      buildType: 'specific'
      project: 'c8a112df-eb95-41fa-bb80-48e83128fe75'
      definition: '10'
      buildVersionToDownload: 'latest'
      artifactName: 'tools'
      targetPath: '$(Pipeline.Workspace)/s/src/tools'

  - task: DownloadPipelineArtifact@2
    displayName: Download node modules
    inputs:
      buildType: "specific"
      project: "c8a112df-eb95-41fa-bb80-48e83128fe75"
      definition: "10"
      buildVersionToDownload: "latest"
      artifactName: "node_modules"
      targetPath: "$(Pipeline.Workspace)/s/src/node_modules"

  - task: DownloadPipelineArtifact@2
    displayName: Download client node modules
    inputs:
      buildType: "specific"
      project: "c8a112df-eb95-41fa-bb80-48e83128fe75"
      definition: "10"
      buildVersionToDownload: "latest"
      artifactName: "client_node_modules"
      targetPath: "$(Pipeline.Workspace)/s/src/client/node_modules"

  - task: DownloadPipelineArtifact@2
    displayName: Download packages
    inputs:
      buildType: "specific"
      project: "c8a112df-eb95-41fa-bb80-48e83128fe75"
      definition: "10"
      buildVersionToDownload: "latest"
      artifactName: "packages"
      targetPath: "$(Pipeline.Workspace)/s/src/packages"

  - task: PowerShell@2
    displayName: Config preparation
    inputs:
      targetType: "inline"
      script: |
        Move-Item $(license_file.secureFilePath) ./src/ -Force

  - task: gulp@1
    displayName: Gulp cs code generation
    inputs:
      gulpFile: "./src/scripts/code-generation/codeGen.js"
      targets:
      arguments: "generate-cs"
      enableCodeCoverage: false

  - task: gulp@1
    displayName: Gulp ts code generation
    inputs:
      gulpFile: "./src/client/scripts/code-generation/codeGen.js"
      targets:
      arguments: "generate-ts"
      enableCodeCoverage: false
  
  - task: DotNetCoreCLI@2
    displayName: Add sitecore nuget source
    inputs:
      command: 'custom'
      custom: 'nuget'
      arguments: 'add source -n Sitecore https://sitecore.myget.org/F/sc-packages/api/v3/index.json'
      workingDirectory: '$(Pipeline.Workspace)/s'

  - task: NuGetAuthenticate@0
    displayName: Nuget Authenticate
    inputs:
      nuGetServiceConnections: 'Connect.DynamicsRetail Nuget connection'

  - task: DotNetCoreCLI@2
    displayName: Restore .Net Core tools
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'restore'
      workingDirectory: './'

  - task: DotNetCoreCLI@2
    displayName: Create wooli.itempackage
    inputs:
      command: 'custom'
      custom: 'sitecore'
      arguments: 'ser pkg create -o wooli.itempackage'
      workingDirectory: '$(Pipeline.Workspace)/s'

  - task: PowerShell@2
    displayName: Webpack build
    inputs:
      targetType: "inline"
      script: |
        $env:path="$env:path;$(Pipeline.Workspace)/s/src/node_modules/.bin"
        $env:path="$env:path;$(Pipeline.Workspace)/s/src/client/node_modules/.bin"
        $env:path="$env:path;$(Pipeline.Workspace)/s/src/tools"
        copyfiles -f  ./src/bootstrap/public/**/* ./src/bootstrap/build/
        $(Pipeline.Workspace)/s/src/client/node_modules/.bin/cross-env.cmd NODE_ENV=production $(Pipeline.Workspace)/s/src/client/node_modules/.bin/webpack.cmd
      workingDirectory: "./src/client"

  - task: Cake@2
    displayName: "NuGet restore"
    inputs:
      script: 'src/build.cake'
      target: 'Restore :: Restore NuGet Packages'
      verbosity: 'Verbose'
      Version: '1.3.0'

  - task: Cake@2
    displayName: Build Server Code
    inputs:
      script: 'src/build.cake'
      target: '008-Build-Server-Code'
      verbosity: 'Verbose'
      Version: '1.3.0'

  - task: Cake@2
    displayName: Run Unit tests
    inputs:
      script: 'src/build.cake'
      target: '003-Tests'
      verbosity: 'Quiet'
      Version: '1.3.0'

  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage
    inputs:
      codeCoverageTool: "Cobertura"
      summaryFileLocation: "$(Pipeline.Workspace)/s/output/tests/coverage/cobertura-coverage.xml"

  - task: PowerShell@2
    displayName: Collect files for artifacts
    env:
      Workspace: $(Pipeline.Workspace)
    inputs:
      targetType: 'inline'
      script: |
        robocopy $(Pipeline.Workspace)/s/src/configs/Sitecore/ $(Pipeline.Workspace)/s/output/ web.config
        ./automation/Get-Artifacts.ps1 Feature
        ./automation/Get-Artifacts.ps1 Foundation
        ./automation/Get-Artifacts.ps1 Project
        robocopy $(Pipeline.Workspace)/s/src/client/src/bootstrap/build $(Pipeline.Workspace)/s/output/Project/dist/$(project_name)/Project/$(project_name) /s
      errorActionPreference: 'continue'
      ignoreLASTEXITCODE: true

  - task: PowerShell@2
    displayName: Change default parameters for $(project_name)
    inputs:
      targetType: "inline"
      script: |
        (Get-Content $(project_site_config)) -replace 'hostName=$(quotes_regexp)', 'hostName="$(sitecore_hostname)"' | Set-Content $(project_site_config)
        (Get-Content $(foundation_commerce_config)) -replace '<server>.*</server>', '<server>$(smtp_server)</server>' -replace '<userName>.*</userName>', '<userName>$(smtp_username)</userName>' -replace '<password>.*</password>', '<password>$(smtp_password)</password>' | Set-Content $(foundation_commerce_config)

  - task: PublishPipelineArtifact@1
    displayName: Publish web config
    inputs:
      targetPath: "$(artifacts_location)/web.config"
      artifact: "web_config"
      publishLocation: "pipeline"

  - task: PublishPipelineArtifact@1
    displayName: Publish Feature
    inputs:
      targetPath: "$(artifacts_location)/Feature"
      artifact: "Feature"
      publishLocation: "pipeline"

  - task: PublishPipelineArtifact@1
    displayName: Publish Foundation
    inputs:
      targetPath: "$(artifacts_location)/Foundation"
      artifact: "Foundation"
      publishLocation: "pipeline"

  - task: PublishPipelineArtifact@1
    displayName: Publish Project
    inputs:
      targetPath: "$(artifacts_location)/Project"
      artifact: "Project"
      publishLocation: "pipeline"

  - task: PublishBuildArtifacts@1
    displayName: Publish Sitecore.json file
    inputs:
      PathtoPublish: '$(Pipeline.Workspace)/s/sitecore.json'
      ArtifactName: 'sitecore.json'
      publishLocation: 'Container'
  
  - task: PublishBuildArtifacts@1
    displayName: Publish wooli.itempackage
    inputs:
      PathtoPublish: '$(Pipeline.Workspace)/s/wooli.itempackage'
      ArtifactName: 'itempackage'
      publishLocation: 'Container'

  - task: PublishBuildArtifacts@1
    displayName: Publish Test Reports
    inputs:
      PathtoPublish: '$(Pipeline.Workspace)/s/output/tests/'
      ArtifactName: 'Coverage'
      publishLocation: 'Container'