# Build using Visual Studio 2017 on Windows Server 2016.
# Variables with password stored in Azure secrets

trigger: none

pool:
  name: Wooli Rough

variables:
  build_cake: './src/build.cake'
  quotes_regexp: '"([^"]+)"'
  site_root_dir: 'sc9.local'
  sitecore_webroot: 'C:\inetpub\wwwroot\$(site_root_dir)'
  maintenance_webroot: 'C:\inetpub\wwwroot\maintenance'
  shops_String: 'shopsServiceUrl'
  ops_String: 'commerceOpsServiceUrl'
  minions_String: 'commerceMinionsServiceUrl'
  identity_String: 'sitecoreIdentityServerUrl'
  project_manifest: './src/Project/$(project_name)/client/manifest.json'
  project_site_config: '$(sitecore_webroot)\App_Config\Include\Project\$(project_name).Project.$(project_name).Site.config'
  commerce_engine_config: '$(sitecore_webroot)\App_Config\Include\Y.Commerce.Engine\Sitecore.Commerce.Engine.Connect.config'
  auth_server_config: '$(sitecore_webroot)\App_Config\Sitecore\Owin.Authentication.IdentityServer\Sitecore.Owin.Authentication.IdentityServer.config'
  foundation_commerce_config: '$(sitecore_webroot)\App_Config\Include\Foundation\$(project_name).Foundation.Commerce.config'

steps:

- task: UseNode@1
  displayName: Installing Node 10
  inputs:
    script: '"C:\Program Files\nodejs\npm.cmd" --version'

- task: DownloadSecureFile@1
  displayName: Download license file
  name: license_file
  inputs:
    secureFile: 'license.xml'

- task: PowerShell@2
  displayName: Config preparation
  inputs:
    targetType: 'inline'
    script: |
      (Get-Content $(build_cake)) -replace "MSBuildToolVersion.VS201\d{1,3}", '$(agent_buildTools)' | Set-Content $(build_cake)
      (Get-Content $(build_cake)) -replace 'publishingTargetDir: $(quotes_regexp)','publishingTargetDir: "$(publishingTargetDir)"' | Set-Content $(build_cake)
      (Get-Content $(build_cake)) -replace 'scSiteUrl: $(quotes_regexp)', 'scSiteUrl: "https://$(scSiteUrl)"' | Set-Content $(build_cake)
      (Get-Content $(project_manifest)) -replace '"url": $(quotes_regexp)', '"url": "https://$(host_name)"' | Set-Content $(project_manifest)
      move $(license_file.secureFilePath) ./src/ -Force

- task: PowerShell@2
  displayName: Add windows credentials to agent
  inputs:
    targetType: 'inline'
    script: |
      cmdkey /add:$(HOST_NETWORK_ADDRESS) /user:$(user_name) /pass:$(user_password)

- task: PowerShell@2
  displayName: Restore packages
  inputs:
    filePath: './src/build.ps1'
    arguments: '-Target 001-Restore'
    workingDirectory: './src/'

- task: PowerShell@2
  displayName: Build code
  inputs:
    filePath: './src/build.ps1'
    arguments: '-Target 002-Build'
    workingDirectory: './src/'


- task: PowerShell@2
  displayName: Run Unit tests
  inputs:
    filePath: './src/build.ps1'
    arguments: '-Target 003-Tests'
    workingDirectory: './src/'

- task: PowerShell@2
  displayName: Set maintenance page
  inputs:
    targetType: 'inline'
    script: |
      Import-Module WebAdministration
      Set-ItemProperty IIS:\Sites\$(site_root_dir) -name physicalPath -value "$(maintenance_webroot)"

- task: PowerShell@2
  displayName: Prepare packages and web config
  inputs:
    filePath: './src/build.ps1'
    arguments: '-Target 004-Packages'
    workingDirectory: './src/'


- task: PowerShell@2
  displayName: Publish binaries
  inputs:
    filePath: './src/build.ps1'
    arguments: '-Target 005-Publish'
    workingDirectory: './src/'

- task: PowerShell@2
  displayName: Change default addresses for $(project_name)
  inputs:
    targetType: 'inline'
    script: |
      (Get-Content $(project_site_config)) -replace 'hostName=$(quotes_regexp)', 'hostName="$(host_name)"' | Set-Content $(project_site_config)
      (Get-Content $(auth_server_config)) -replace 'sc.variable name="identityServerAuthority" value=$(quotes_regexp)', 'sc.variable name="identityServerAuthority" value="https://$(identity_host_name)"' | Set-Content $(auth_server_config)
      (Get-Content $(commerce_engine_config)) -replace '<shopsServiceUrl>.*</shopsServiceUrl>', '<shopsServiceUrl>https://$(authoring_host_name)/api/</shopsServiceUrl>' | Set-Content $(commerce_engine_config)
      (Get-Content $(commerce_engine_config)) -replace '<commerceOpsServiceUrl>.*</commerceOpsServiceUrl>', '<commerceOpsServiceUrl>https://$(ops_host_name)/commerceops/</commerceOpsServiceUrl>' | Set-Content $(commerce_engine_config)
      (Get-Content $(commerce_engine_config)) -replace '<commerceMinionsServiceUrl>.*</commerceMinionsServiceUrl>', '<commerceMinionsServiceUrl>https://$(minions_host_name)/commerceops/</commerceMinionsServiceUrl>' | Set-Content $(commerce_engine_config)
      (Get-Content $(commerce_engine_config)) -replace '<sitecoreIdentityServerUrl>.*</sitecoreIdentityServerUrl>', '<sitecoreIdentityServerUrl>https://$(identity_host_name)</sitecoreIdentityServerUrl>' | Set-Content $(commerce_engine_config)
      (Get-Content $(foundation_commerce_config)) -replace '<server>.*</server>', '<server>$(smtp_server)</server>' | Set-Content $(foundation_commerce_config)
      (Get-Content $(foundation_commerce_config)) -replace '<userName>.*</userName>', '<userName>$(smtp_username)</userName>' | Set-Content $(foundation_commerce_config)
      (Get-Content $(foundation_commerce_config)) -replace '<password>.*</password>', '<password>$(smtp_password)</password>' | Set-Content $(foundation_commerce_config)

- task: PowerShell@2
  displayName: Remove maintenance page
  inputs:
    targetType: 'inline'
    script: |
      Import-Module WebAdministration
      Set-ItemProperty IIS:\Sites\$(site_root_dir) -name physicalPath -value "$(sitecore_webroot)"

- task: PowerShell@2
  displayName: Sync Unicorn
  inputs:
    filePath: './src/build.ps1'
    arguments: '-Target 006-Sync-Content'
    errorActionPreference: 'continue'
    workingDirectory: './src/'
  continueOnError: true

- task: PowerShell@2
  displayName: Remove windows credentials from agent
  inputs:
    targetType: 'inline'
    script: 'cmdkey /delete:$env:HOST_NETWORK_ADDRESS'
  condition: always()