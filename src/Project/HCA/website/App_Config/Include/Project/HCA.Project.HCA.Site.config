<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/"
               xmlns:set="http://www.sitecore.net/xmlconfig/set/"
               xmlns:env="http://www.sitecore.net/xmlconfig/env/"
               xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore>
    <sites>
      <site patch:before="site[@name='website']"
            inherits="website"
            name="HCA"
            hostName="hca.local"
            rootPath="/sitecore/content/HCA"
            startItem="/Home"
            database="master"
            enableItemLanguageFallback="true"
            enableTracking="true"
            domain="CommerceUsers" />

      <site name="HCA" env:require="!Local">
        <patch:attribute name="hostName">$(HCA.HostName)</patch:attribute>
        <patch:attribute name="targetHostName">$(HCA.TargetHostName)</patch:attribute>
      </site>
    </sites>

    <javaScriptServices>
      <apps>
        <!-- you may override other attributes from 'defaults' in the app definiton below -->
        <app name="HCA"
             sitecorePath="/sitecore/content/HCA"
             filesystemPath="/dist/HCA/project/$name"
             dictionaryDomain="Dictionary"
             dictionaryPath="/sitecore/content/HCA/Dictionary"
             inherits="defaults"
             graphQLEndpoint="/HCA/api/graph" />
      </apps>
    </javaScriptServices>
    <api>
      <!--
        Define the app's Sitecore GraphQL API endpoint
        Note: this can be removed if you are not using GraphQL.
        Note: the endpoint must be defined both for integrated and connected type GraphQL queries.
      -->
      <GraphQL>
        <endpoints>
          <hca url="/HCA/api/graph"
                 type="Sitecore.Services.GraphQL.Hosting.DatabaseAwareGraphQLEndpoint, Sitecore.Services.GraphQL.NetFxHost"
                 resolve="true">
            <url>$(url)</url>

            <enabled>true</enabled>
            <enableSubscriptions>true</enableSubscriptions>

            <!-- lock down the endpoint when deployed to content delivery -->
            <graphiql role:require="ContentDelivery">false</graphiql>
            <enableSchemaExport role:require="ContentDelivery">false</enableSchemaExport>
            <enableStats role:require="ContentDelivery">false</enableStats>
            <enableCacheStats role:require="ContentDelivery">false</enableCacheStats>
            <disableIntrospection role:require="ContentDelivery">true</disableIntrospection>

            <schema hint="list:AddSchemaProvider">
              <content
                type="Sitecore.Services.GraphQL.Content.ContentSchemaProvider, Sitecore.Services.GraphQL.Content">
                <!-- scope typed template generation to just this app's templates -->
                <templates
                  type="Sitecore.Services.GraphQL.Content.TemplateGeneration.Filters.StandardTemplatePredicate, Sitecore.Services.GraphQL.Content">
                  <database>context</database>
                  <paths hint="list:AddIncludedPath">
                    <templates>/sitecore/templates/HCA</templates>
                    <templates>/sitecore/templates/Commerce</templates>
                    <templates>/sitecore/templates/CommerceConnect</templates>
                  </paths>
                  <fieldFilter
                    type="Sitecore.Services.GraphQL.Content.TemplateGeneration.Filters.StandardFieldFilter, Sitecore.Services.GraphQL.Content">
                    <exclusions hint="raw:AddFilter">
                      <!--
                          Remove system fields from the API (e.g. __Layout) to keep the schema lean
                      -->
                      <exclude name="__*" />
                    </exclusions>
                  </fieldFilter>
                </templates>

                <queries hint="raw:AddQuery">
                  <!-- enable querying on items via this API -->
                  <query name="item"
                         type="Sitecore.Services.GraphQL.Content.Queries.ItemQuery, Sitecore.Services.GraphQL.Content" />
                  <query name="sites"
                         type="Sitecore.Services.GraphQL.Content.Queries.SiteQuery, Sitecore.Services.GraphQL.Content"/>
                  <query name="templates" 
                         type="Sitecore.Services.GraphQL.Content.Queries.TemplatesQuery, Sitecore.Services.GraphQL.Content"/>
                  <query name="search" 
                         type="HCA.Foundation.Base.Services.GraphQL.Queries.ExtendedSearchQuery, HCA.Foundation.Base"/>
                </queries>

                <fieldTypeMapping ref="/sitecore/api/GraphQL/defaults/content/fieldTypeMappings/standardTypeMapping" />
              </content>
            </schema>

            <!-- Enables the 'jss' graph nodes that are preformatted to use with JSS rendering components, and the datasource resolving queries for JSS -->
            <extenders hint="list:AddExtender">
              <layoutExtender
                type="Sitecore.JavaScriptServices.GraphQL.JssExtender, Sitecore.JavaScriptServices.GraphQL"
                resolve="true" />
            </extenders>

            <!-- Determines the security of the service. 'publicService' is open to anonymous access, but requires an SSC API key. -->
            <security ref="/sitecore/api/GraphQL/defaults/security/publicService" />

            <!-- Determines how performance is logged for the service. Defaults are defined in Sitecore.Services.GraphQL.config -->
            <performance ref="/sitecore/api/GraphQL/defaults/performance/standard" />
          </hca>
        </endpoints>
      </GraphQL>
    </api>

    <linkManager defaultProvider="sitecore">
      <providers>
        <add name="sitecore">
          <patch:attribute name="languageEmbedding" value="never" />
        </add>
      </providers>
    </linkManager>
  </sitecore>
</configuration>